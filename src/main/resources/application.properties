#Server
server.port=8081

#DataBase
#spring.datasource.url=jdbc:mysql://192.168.0.14:3306/dev_base
#spring.datasource.username=dev
#spring.datasource.password=Dev,2017

spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=123456
spring.datasource.driverClassName=org.postgresql.Driver
#页面热加载
spring.thymeleaf.cache = false


#Redis
# （普通集群，不使用则不用开启）在群集中执行命令时要遵循的最大重定向数目。
# spring.redis.cluster.max-redirects=
# （普通集群，不使用则不用开启）以逗号分隔的“主机：端口”对列表进行引导。
# spring.redis.cluster.nodes=
# 连接工厂使用的数据库索引。
spring.redis.database=10
# 连接URL，将覆盖主机，端口和密码（用户将被忽略），例如：redis://user:password@example.com:6379
#spring.redis.url=
# Redis服务器主机。
spring.redis.host=127.0.0.1
# 登录redis服务器的密码。
spring.redis.password=
# 启用SSL支持。
spring.redis.ssl=false
# 池在给定时间可以分配的最大连接数。使用负值无限制。
spring.redis.jedis.pool.max-active=30
# 池中“空闲”连接的最大数量。使用负值表示无限数量的空闲连接。
spring.redis.jedis.pool.max-idle=10
# 连接分配在池被耗尽时抛出异常之前应该阻塞的最长时间量（以毫秒为单位）。使用负值可以无限期地阻止。
spring.redis.jedis.pool.max-wait=-1ms
# 目标为保持在池中的最小空闲连接数。这个设置只有在正面的情况下才有效果。
spring.redis.jedis.pool.min-idle=2
# Redis服务器端口。
spring.redis.port=6379
# （哨兵模式，不使用则不用开启）Redis服务器的名称。
# spring.redis.sentinel.master=
# （哨兵模式，不使用则不用开启）主机：端口对的逗号分隔列表。
# spring.redis.sentinel.nodes=
# 以毫秒为单位的连接超时。
spring.redis.timeout=1000ms


#mybatis配置
#mapper位置
mybatis.mapper-locations=classpath*:mysql/*Mapper.xml,mysql/common/common.xml
#领域类包别名
mybatis.type-aliases-package=com.house.work.entity
#mybatis配置文件
mybatis.config-location=classpath:config/mybatis-config.xml


spring.security.filter.dispatcher-types=[""]


spring.rabbitmq.host=192.168.0.13
spring.rabbitmq.port=5672
spring.rabbitmq.username=parkadmin
spring.rabbitmq.password=parkadmin
spring.rabbitmq.virtual-host=vhost_park
spring.rabbitmq.template.mandatory=true
